(()=>{"use strict";jQuery(document).ready((function(e){e("#okmg-data-form").submit((function(s){e("#okmg-form-result").is(":visible")&&e("#okmg-form-result").slideUp(),e("#okmg-form-result").removeClass("success warning error"),s.preventDefault(),e(".okmg-submit-button").attr("disabled",!0),e(".okmg-submit-button").addClass("is-disabled"),e(".okmg-submit-button").text("Submitting form...");var a=!1;if(!o(e("#msf-email").val()))return console.log("Please enter a valid email."),e("#msf-email").addClass("has-error"),a=!0,r("Warning","Email is invalid"),!1;if(!t(e("#msf-phone").val()))return console.log("phone is invalid"),e("#msf-phone").addClass("has-error"),a=!0,r("warning","Phone number is invalid."),!1;if(a)return r("warning","Please fix errors to continue."),!1;console.log("Submit form");var i=e("#okmg-data-form").serializeArray();e.ajax({url:e("#okmg-data-form").attr("action"),type:"POST",data:{formData:i},success:function(o){e("#okmg-form-result").slideDown(),console.log(o),"success"==o?r("success","Thank you for submitting the form. We will get back to you soon."):r("error","There is some error. Please try again later!"),e(".okmg-input").removeClass("has-error"),e("#okmg-data-form").trigger("reset")}})}));var o=function(e){return String(e).toLowerCase().match(/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/)},t=function(e){return String(e).toLowerCase().match(/^0[0-8]\d{8}$/g)},r=function(o,t){e("#okmg-form-result").slideDown(),e("#okmg-form-result").addClass(o),e("#okmg-form-result").text(t),e(".okmg-submit-button").text("Submit"),e(".okmg-submit-button").removeClass("is-disabled"),e(".okmg-submit-button").attr("disabled",!1)}})),jQuery(document).ready((function(e){e("#okmg_ham_menu").click((function(){e(this).toggleClass("menu-open"),e(".okmg-main-menu").toggleClass("mobile-menu-opened")}))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLmpzIiwibWFwcGluZ3MiOiJtQkFBQUEsT0FBT0MsVUFBVUMsT0FBTSxTQUFVQyxHQUM3QkEsRUFBRSxtQkFBbUJDLFFBQU8sU0FBVUMsR0FHOUJGLEVBQUUscUJBQXFCRyxHQUFHLGFBQzFCSCxFQUFFLHFCQUFxQkksVUFFM0JKLEVBQUUscUJBQXFCSyxZQUFZLHlCQUNuQ0gsRUFBRUksaUJBRUZOLEVBQUUsdUJBQXVCTyxLQUFLLFlBQVksR0FDMUNQLEVBQUUsdUJBQXVCUSxTQUFTLGVBQ2xDUixFQUFFLHVCQUF1QlMsS0FBSyxzQkFDOUIsSUFBSUMsR0FBZ0IsRUFFcEIsSUFBS0MsRUFBY1gsRUFBRSxjQUFjWSxPQVMvQixPQVJBQyxRQUFRQyxJQUFJLCtCQUNaZCxFQUFFLGNBQWNRLFNBQVMsYUFDekJFLEdBQWdCLEVBRWhCSyxFQUNJLFVBQ0EscUJBRUcsRUFHWCxJQUFLQyxFQUFjaEIsRUFBRSxjQUFjWSxPQVMvQixPQVJBQyxRQUFRQyxJQUFJLG9CQUNaZCxFQUFFLGNBQWNRLFNBQVMsYUFDekJFLEdBQWdCLEVBRWhCSyxFQUNJLFVBQ0EsNkJBRUcsRUFHWCxHQUFJTCxFQUtBLE9BSkFLLEVBQ0ksVUFDQSxtQ0FFRyxFQUVQRixRQUFRQyxJQUFJLGVBQ1osSUFBSUcsRUFBV2pCLEVBQUUsbUJBQW1Ca0IsaUJBQ3BDbEIsRUFBRW1CLEtBQUssQ0FDSEMsSUFBS3BCLEVBQUUsbUJBQW1CTyxLQUFLLFVBQy9CYyxLQUFNLE9BQ05DLEtBQU0sQ0FBRUwsU0FBQUEsR0FDUk0sUUFBUyxTQUFVQyxHQUNmeEIsRUFBRSxxQkFBcUJ5QixZQUN2QlosUUFBUUMsSUFBSVUsR0FDRSxXQUFWQSxFQUNBVCxFQUNJLFVBQ0Esb0VBR0pBLEVBQ0ksUUFDQSxnREFJUmYsRUFBRSxlQUFlSyxZQUFZLGFBQzdCTCxFQUFFLG1CQUFtQjBCLFFBQVEsUUFFakMsR0FHWixJQUVBLElBQU1mLEVBQWdCLFNBQUNnQixHQUNuQixPQUFPQyxPQUFPRCxHQUNURSxjQUNBQyxNQUNHLHdKQUVaLEVBR01kLEVBQWdCLFNBQUNlLEdBQ25CLE9BQU9ILE9BQU9HLEdBQ1RGLGNBQ0FDLE1BQ0csaUJBRVosRUFFTWYsRUFBYSxTQUFDaUIsRUFBY0MsR0FDOUJqQyxFQUFFLHFCQUFxQnlCLFlBQ3ZCekIsRUFBRSxxQkFBcUJRLFNBQVN3QixHQUNoQ2hDLEVBQUUscUJBQXFCUyxLQUFLd0IsR0FHNUJqQyxFQUFFLHVCQUF1QlMsS0FBSyxVQUM5QlQsRUFBRSx1QkFBdUJLLFlBQVksZUFDckNMLEVBQUUsdUJBQXVCTyxLQUFLLFlBQVksRUFDOUMsQ0FFSixJQ3JHQVYsT0FBT0MsVUFBVUMsT0FBTSxTQUFVQyxHQUM3QkEsRUFBRSxrQkFBa0JrQyxPQUFNLFdBQ3RCbEMsRUFBRW1DLE1BQU1DLFlBQVksYUFDcEJwQyxFQUFFLG1CQUFtQm9DLFlBQVkscUJBQ3JDLEdBRUosRyIsInNvdXJjZXMiOlsid2VicGFjazovL29rbWd0ZXN0Ly4vc3JjL2Fzc2V0cy9qcy9zdWJtaXQtZm9ybS5qcyIsIndlYnBhY2s6Ly9va21ndGVzdC8uL3NyYy9hc3NldHMvanMvYnVuZGxlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImpRdWVyeShkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24gKCQpIHtcclxuICAgICQoXCIjb2ttZy1kYXRhLWZvcm1cIikuc3VibWl0KGZ1bmN0aW9uIChlKSB7XHJcblxyXG5cclxuICAgICAgICBpZiAoJCgnI29rbWctZm9ybS1yZXN1bHQnKS5pcygnOnZpc2libGUnKSkge1xyXG4gICAgICAgICAgICAkKCcjb2ttZy1mb3JtLXJlc3VsdCcpLnNsaWRlVXAoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgJCgnI29rbWctZm9ybS1yZXN1bHQnKS5yZW1vdmVDbGFzcygnc3VjY2VzcyB3YXJuaW5nIGVycm9yJyk7XHJcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cclxuICAgICAgICAkKCcub2ttZy1zdWJtaXQtYnV0dG9uJykuYXR0cignZGlzYWJsZWQnLCB0cnVlKTtcclxuICAgICAgICAkKCcub2ttZy1zdWJtaXQtYnV0dG9uJykuYWRkQ2xhc3MoJ2lzLWRpc2FibGVkJyk7XHJcbiAgICAgICAgJCgnLm9rbWctc3VibWl0LWJ1dHRvbicpLnRleHQoJ1N1Ym1pdHRpbmcgZm9ybS4uLicpO1xyXG4gICAgICAgIGxldCBmb3JtSGFzRXJyb3JzID0gZmFsc2U7XHJcblxyXG4gICAgICAgIGlmICghdmFsaWRhdGVFbWFpbCgkKCcjbXNmLWVtYWlsJykudmFsKCkpKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdQbGVhc2UgZW50ZXIgYSB2YWxpZCBlbWFpbC4nKTtcclxuICAgICAgICAgICAgJCgnI21zZi1lbWFpbCcpLmFkZENsYXNzKCdoYXMtZXJyb3InKTtcclxuICAgICAgICAgICAgZm9ybUhhc0Vycm9ycyA9IHRydWU7XHJcblxyXG4gICAgICAgICAgICBzaG93UmVzdWx0KFxyXG4gICAgICAgICAgICAgICAgJ1dhcm5pbmcnLFxyXG4gICAgICAgICAgICAgICAgJ0VtYWlsIGlzIGludmFsaWQnXHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmICghdmFsaWRhdGVQaG9uZSgkKCcjbXNmLXBob25lJykudmFsKCkpKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdwaG9uZSBpcyBpbnZhbGlkJyk7XHJcbiAgICAgICAgICAgICQoJyNtc2YtcGhvbmUnKS5hZGRDbGFzcygnaGFzLWVycm9yJyk7XHJcbiAgICAgICAgICAgIGZvcm1IYXNFcnJvcnMgPSB0cnVlO1xyXG5cclxuICAgICAgICAgICAgc2hvd1Jlc3VsdChcclxuICAgICAgICAgICAgICAgICd3YXJuaW5nJyxcclxuICAgICAgICAgICAgICAgICdQaG9uZSBudW1iZXIgaXMgaW52YWxpZC4nXHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmIChmb3JtSGFzRXJyb3JzKSB7XHJcbiAgICAgICAgICAgIHNob3dSZXN1bHQoXHJcbiAgICAgICAgICAgICAgICAnd2FybmluZycsXHJcbiAgICAgICAgICAgICAgICAnUGxlYXNlIGZpeCBlcnJvcnMgdG8gY29udGludWUuJ1xyXG4gICAgICAgICAgICApO1xyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coJ1N1Ym1pdCBmb3JtJyk7XHJcbiAgICAgICAgICAgIGxldCBmb3JtRGF0YSA9ICQoJyNva21nLWRhdGEtZm9ybScpLnNlcmlhbGl6ZUFycmF5KCk7XHJcbiAgICAgICAgICAgICQuYWpheCh7XHJcbiAgICAgICAgICAgICAgICB1cmw6ICQoJyNva21nLWRhdGEtZm9ybScpLmF0dHIoJ2FjdGlvbicpLFxyXG4gICAgICAgICAgICAgICAgdHlwZTogXCJQT1NUXCIsXHJcbiAgICAgICAgICAgICAgICBkYXRhOiB7IGZvcm1EYXRhIH0sXHJcbiAgICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAocmVzdWx0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJCgnI29rbWctZm9ybS1yZXN1bHQnKS5zbGlkZURvd24oKTtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXN1bHQpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChyZXN1bHQgPT0gJ3N1Y2Nlc3MnKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNob3dSZXN1bHQoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnc3VjY2VzcycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnVGhhbmsgeW91IGZvciBzdWJtaXR0aW5nIHRoZSBmb3JtLiBXZSB3aWxsIGdldCBiYWNrIHRvIHlvdSBzb29uLidcclxuICAgICAgICAgICAgICAgICAgICAgICAgKTtcclxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzaG93UmVzdWx0KFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2Vycm9yJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICdUaGVyZSBpcyBzb21lIGVycm9yLiBQbGVhc2UgdHJ5IGFnYWluIGxhdGVyISdcclxuICAgICAgICAgICAgICAgICAgICAgICAgKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgLy9yZXN0IGZvcm0gYW5kIGJ1dHRvblxyXG4gICAgICAgICAgICAgICAgICAgICQoJy5va21nLWlucHV0JykucmVtb3ZlQ2xhc3MoJ2hhcy1lcnJvcicpO1xyXG4gICAgICAgICAgICAgICAgICAgICQoJyNva21nLWRhdGEtZm9ybScpLnRyaWdnZXIoXCJyZXNldFwiKTtcclxuXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgY29uc3QgdmFsaWRhdGVFbWFpbCA9IChlbWFpbCkgPT4ge1xyXG4gICAgICAgIHJldHVybiBTdHJpbmcoZW1haWwpXHJcbiAgICAgICAgICAgIC50b0xvd2VyQ2FzZSgpXHJcbiAgICAgICAgICAgIC5tYXRjaChcclxuICAgICAgICAgICAgICAgIC9eKChbXjw+KClbXFxdXFxcXC4sOzpcXHNAXCJdKyhcXC5bXjw+KClbXFxdXFxcXC4sOzpcXHNAXCJdKykqKXwoXCIuK1wiKSlAKChcXFtbMC05XXsxLDN9XFwuWzAtOV17MSwzfVxcLlswLTldezEsM31cXC5bMC05XXsxLDN9XFxdKXwoKFthLXpBLVpcXC0wLTldK1xcLikrW2EtekEtWl17Mix9KSkkL1xyXG4gICAgICAgICAgICApO1xyXG4gICAgfTtcclxuXHJcblxyXG4gICAgY29uc3QgdmFsaWRhdGVQaG9uZSA9IChwaG9uZSkgPT4ge1xyXG4gICAgICAgIHJldHVybiBTdHJpbmcocGhvbmUpXHJcbiAgICAgICAgICAgIC50b0xvd2VyQ2FzZSgpXHJcbiAgICAgICAgICAgIC5tYXRjaChcclxuICAgICAgICAgICAgICAgIC9eMFswLThdXFxkezh9JC9nXHJcbiAgICAgICAgICAgICk7XHJcbiAgICB9O1xyXG5cclxuICAgIGNvbnN0IHNob3dSZXN1bHQgPSAoZWxlbWVudENsYXNzLCBtZXNzYWdlKSA9PiB7XHJcbiAgICAgICAgJCgnI29rbWctZm9ybS1yZXN1bHQnKS5zbGlkZURvd24oKTtcclxuICAgICAgICAkKCcjb2ttZy1mb3JtLXJlc3VsdCcpLmFkZENsYXNzKGVsZW1lbnRDbGFzcyk7XHJcbiAgICAgICAgJCgnI29rbWctZm9ybS1yZXN1bHQnKS50ZXh0KG1lc3NhZ2UpO1xyXG5cclxuXHJcbiAgICAgICAgJCgnLm9rbWctc3VibWl0LWJ1dHRvbicpLnRleHQoJ1N1Ym1pdCcpO1xyXG4gICAgICAgICQoJy5va21nLXN1Ym1pdC1idXR0b24nKS5yZW1vdmVDbGFzcygnaXMtZGlzYWJsZWQnKTtcclxuICAgICAgICAkKCcub2ttZy1zdWJtaXQtYnV0dG9uJykuYXR0cignZGlzYWJsZWQnLCBmYWxzZSk7XHJcbiAgICB9XHJcblxyXG59KVxyXG5cclxuIiwiaW1wb3J0ICcuL3N1Ym1pdC1mb3JtLmpzJztcclxuXHJcbmpRdWVyeShkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24gKCQpIHtcclxuICAgICQoJyNva21nX2hhbV9tZW51JykuY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICQodGhpcykudG9nZ2xlQ2xhc3MoJ21lbnUtb3BlbicpO1xyXG4gICAgICAgICQoJy5va21nLW1haW4tbWVudScpLnRvZ2dsZUNsYXNzKCdtb2JpbGUtbWVudS1vcGVuZWQnKTtcclxuICAgIH0pO1xyXG5cclxufSlcclxuXHJcblxyXG5cclxuXHJcblxyXG4iXSwibmFtZXMiOlsialF1ZXJ5IiwiZG9jdW1lbnQiLCJyZWFkeSIsIiQiLCJzdWJtaXQiLCJlIiwiaXMiLCJzbGlkZVVwIiwicmVtb3ZlQ2xhc3MiLCJwcmV2ZW50RGVmYXVsdCIsImF0dHIiLCJhZGRDbGFzcyIsInRleHQiLCJmb3JtSGFzRXJyb3JzIiwidmFsaWRhdGVFbWFpbCIsInZhbCIsImNvbnNvbGUiLCJsb2ciLCJzaG93UmVzdWx0IiwidmFsaWRhdGVQaG9uZSIsImZvcm1EYXRhIiwic2VyaWFsaXplQXJyYXkiLCJhamF4IiwidXJsIiwidHlwZSIsImRhdGEiLCJzdWNjZXNzIiwicmVzdWx0Iiwic2xpZGVEb3duIiwidHJpZ2dlciIsImVtYWlsIiwiU3RyaW5nIiwidG9Mb3dlckNhc2UiLCJtYXRjaCIsInBob25lIiwiZWxlbWVudENsYXNzIiwibWVzc2FnZSIsImNsaWNrIiwidGhpcyIsInRvZ2dsZUNsYXNzIl0sInNvdXJjZVJvb3QiOiIifQ==